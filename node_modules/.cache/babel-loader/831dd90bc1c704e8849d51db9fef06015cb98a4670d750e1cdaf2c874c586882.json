{"ast":null,"code":"var _jsxFileName = \"/home/daniel/repos/Projects/MemoryCard/src/components/CardDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardDisplay() {\n  _s();\n  const [images, setImg] = useState([]);\n  const displays = [];\n  function randomUniqueNum(range, outputCount) {\n    let arr = [];\n    for (let i = 1; i <= range; i++) {\n      arr.push(i);\n    }\n    let result = [];\n    for (let i = 1; i <= outputCount; i++) {\n      const random = Math.floor(Math.random() * (range - i));\n      result.push(arr[random]);\n      arr[random] = arr[range - i];\n    }\n    return result;\n  }\n  useEffect(() => {});\n  function shuffle() {\n    var container = document.getElementsByClassName(\"image-container\");\n    var elementsArray = Array.prototype.slice.call(container.getElementsByClassName('shuffleMe'));\n    elementsArray.forEach(function (element) {\n      container.removeChild(element);\n    });\n    shuffleArray(elementsArray);\n    elementsArray.forEach(function (element) {\n      container.appendChild(element);\n    });\n  }\n  function shuffleArray(array) {\n    for (var i = array.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n    return array;\n  }\n  /* function displayPokemonCards(numOfCards) {\n      const rando = randomUniqueNum(cards.length, numOfCards);\n       for (let i = 0; i < numOfCards; i++) {\n          displays.push(<img src={cards[rando[i]-1]}></img>);\n       }\n  } */\n  //displayPokemonCards(5);\n  useEffect(() => {\n    async function getData() {\n      const response = await fetch('https://pokeapi.co/api/v2/pokemon?limit=1000', {\n        mode: 'cors'\n      });\n      const pokeData = await response.json();\n      console.log(pokeData);\n      const urlArray = [];\n      const randArray = randomUniqueNum(pokeData.results.length, 5);\n      console.log(randArray);\n      for (let i = 0; i < randArray.length; i++) {\n        const newUrl = pokeData.results[randArray[i] - 1].url;\n        console.log(newUrl);\n        const response2 = await fetch(newUrl, {\n          mode: 'cors'\n        });\n        const pokeData2 = await response2.json();\n        urlArray.push(pokeData2.sprites.front_default);\n      }\n      console.log(urlArray);\n      setImg(images => [...images, ...urlArray]);\n    }\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [images.map(image => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: imageClick,\n          className: \"pokemon-image\",\n          src: image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 24\n      }, this);\n    }), displays]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n_s(CardDisplay, \"PdAs94XN5ROzKCLOW0xd6fKNUQA=\");\n_c = CardDisplay;\nexport default CardDisplay;\nvar _c;\n$RefreshReg$(_c, \"CardDisplay\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CardDisplay","_s","images","setImg","displays","randomUniqueNum","range","outputCount","arr","i","push","result","random","Math","floor","shuffle","container","document","getElementsByClassName","elementsArray","Array","prototype","slice","call","forEach","element","removeChild","shuffleArray","appendChild","array","length","j","temp","getData","response","fetch","mode","pokeData","json","console","log","urlArray","randArray","results","newUrl","url","response2","pokeData2","sprites","front_default","children","map","image","className","onClick","imageClick","src","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/daniel/repos/Projects/MemoryCard/src/components/CardDisplay.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction CardDisplay() {\n    \n    const [images, setImg] = useState([]);\n    const displays = [];\n    \n    function randomUniqueNum(range, outputCount) {\n\n        let arr = []\n        for (let i = 1; i <= range; i++) {\n          arr.push(i)\n        }\n      \n        let result = [];\n      \n        for (let i = 1; i <= outputCount; i++) {\n          const random = Math.floor(Math.random() * (range - i));\n          result.push(arr[random]);\n          arr[random] = arr[range - i];\n        }\n      \n        return result;\n    }\n    useEffect(() => {})\n    function shuffle() {\n        var container = document.getElementsByClassName(\"image-container\");\n        var elementsArray = Array.prototype.slice.call(container.getElementsByClassName('shuffleMe'));\n          elementsArray.forEach(function(element){\n          container.removeChild(element);\n        })\n        shuffleArray(elementsArray);\n        elementsArray.forEach(function(element){\n        container.appendChild(element);\n      })\n    }\n    function shuffleArray(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Math.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    }\n    /* function displayPokemonCards(numOfCards) {\n        const rando = randomUniqueNum(cards.length, numOfCards);\n\n        for (let i = 0; i < numOfCards; i++) {\n            displays.push(<img src={cards[rando[i]-1]}></img>);\n\n        }\n    } */\n    //displayPokemonCards(5);\n    useEffect(() => {\n        async function getData() {\n          const response = await fetch('https://pokeapi.co/api/v2/pokemon?limit=1000', {mode: 'cors'})\n          const pokeData = await response.json();\n          console.log(pokeData);\n          const urlArray = [];\n          const randArray = randomUniqueNum(pokeData.results.length, 5)\n          \n          console.log(randArray);\n          for (let i = 0; i < randArray.length; i ++) {\n            const newUrl = pokeData.results[randArray[i]-1].url;\n            console.log(newUrl);\n            const response2 = await fetch(newUrl, {mode: 'cors'});\n            const pokeData2 = await response2.json();\n            urlArray.push(pokeData2.sprites.front_default);\n          } \n          console.log(urlArray);\n          setImg(images => ([...images, ...urlArray]));\n        }\n        getData()\n        \n      }, []);\n    \n    return (\n        <div>\n            {images.map((image) => { \n                return <div className=\"image-container\">\n                    <img onClick={imageClick} className =\"pokemon-image\" src={image}></img>\n                    </div>;\n              })} \n            {displays}\n\n        </div>\n      );\n}\nexport default CardDisplay;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}