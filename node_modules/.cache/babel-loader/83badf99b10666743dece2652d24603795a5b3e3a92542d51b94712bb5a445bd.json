{"ast":null,"code":"var _jsxFileName = \"/home/daniel/repos/Projects/MemoryCard/src/components/CardDisplay.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardDisplay() {\n  _s();\n  const displays = [];\n  useEffect(() => {\n    async function getData() {\n      const response = await fetch('https://pokeapi.co/api/v2/pokemon?limit=100', {\n        mode: 'cors'\n      });\n      const pokeData = await response.json();\n      const urlArray = [];\n      for (let i = 0; i < pokeData.results.length; i++) {\n        const newUrl = pokeData.results[i].url;\n        const response2 = await fetch(newUrl, {\n          mode: 'cors'\n        });\n        const pokeData2 = await response2.json();\n        urlArray.push(pokeData2.sprites.front_shiny);\n      }\n      setImg(img => [...img, ...urlArray]);\n    }\n    getData();\n  }, []);\n  function randomUniqueNum(range, outputCount) {\n    let arr = [];\n    for (let i = 1; i <= range; i++) {\n      arr.push(i);\n    }\n    let result = [];\n    for (let i = 1; i <= outputCount; i++) {\n      const random = Math.floor(Math.random() * (range - i));\n      result.push(arr[random]);\n      arr[random] = arr[range - i];\n    }\n    return result;\n  }\n  function displayPokemonCards(numOfCards) {\n    const rando = randomUniqueNum(cards.length, numOfCards);\n    for (let i = 0; i < numOfCards; i++) {\n      displays.push( /*#__PURE__*/_jsxDEV(\"img\", {\n        src: cards[rando[i] - 1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 27\n      }, this));\n    }\n  }\n  displayPokemonCards(5);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: displays\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(CardDisplay, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = CardDisplay;\nexport default CardDisplay;\nvar _c;\n$RefreshReg$(_c, \"CardDisplay\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","CardDisplay","_s","displays","useEffect","getData","response","fetch","mode","pokeData","json","urlArray","i","results","length","newUrl","url","response2","pokeData2","push","sprites","front_shiny","setImg","img","randomUniqueNum","range","outputCount","arr","result","random","Math","floor","displayPokemonCards","numOfCards","rando","cards","src","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["/home/daniel/repos/Projects/MemoryCard/src/components/CardDisplay.js"],"sourcesContent":["import React from \"react\";\n\nfunction CardDisplay() {\n    \n    \n    const displays = [];\n    useEffect(() => {\n        async function getData() {\n          const response = await fetch('https://pokeapi.co/api/v2/pokemon?limit=100', {mode: 'cors'})\n          const pokeData = await response.json();\n          const urlArray = [];\n          for (let i = 0; i < pokeData.results.length; i ++) {\n            const newUrl = pokeData.results[i].url;\n            const response2 = await fetch(newUrl, {mode: 'cors'});\n            const pokeData2 = await response2.json();\n            urlArray.push(pokeData2.sprites.front_shiny);\n            \n            \n          } \n          setImg(img => ([...img, ...urlArray]));\n        }\n        getData()\n        \n      }, []);\n    function randomUniqueNum(range, outputCount) {\n\n        let arr = []\n        for (let i = 1; i <= range; i++) {\n          arr.push(i)\n        }\n      \n        let result = [];\n      \n        for (let i = 1; i <= outputCount; i++) {\n          const random = Math.floor(Math.random() * (range - i));\n          result.push(arr[random]);\n          arr[random] = arr[range - i];\n        }\n      \n        return result;\n    }\n    function displayPokemonCards(numOfCards) {\n        const rando = randomUniqueNum(cards.length, numOfCards);\n\n        for (let i = 0; i < numOfCards; i++) {\n            displays.push(<img src={cards[rando[i]-1]}></img>);\n\n        }\n    }\n    displayPokemonCards(5);\n\n    return (\n        <div>\n            {/* {cards.map((card) => {\n                return <div>\n                    <img src={card}></img>\n                    </div>;\n              })} */}\n            {displays}\n\n        </div>\n      );\n}\nexport default CardDisplay;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAGnB,MAAMC,QAAQ,GAAG,EAAE;EACnBC,SAAS,CAAC,MAAM;IACZ,eAAeC,OAAOA,CAAA,EAAG;MACvB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6C,EAAE;QAACC,IAAI,EAAE;MAAM,CAAC,CAAC;MAC3F,MAAMC,QAAQ,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MACtC,MAAMC,QAAQ,GAAG,EAAE;MACnB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,QAAQ,CAACI,OAAO,CAACC,MAAM,EAAEF,CAAC,EAAG,EAAE;QACjD,MAAMG,MAAM,GAAGN,QAAQ,CAACI,OAAO,CAACD,CAAC,CAAC,CAACI,GAAG;QACtC,MAAMC,SAAS,GAAG,MAAMV,KAAK,CAACQ,MAAM,EAAE;UAACP,IAAI,EAAE;QAAM,CAAC,CAAC;QACrD,MAAMU,SAAS,GAAG,MAAMD,SAAS,CAACP,IAAI,CAAC,CAAC;QACxCC,QAAQ,CAACQ,IAAI,CAACD,SAAS,CAACE,OAAO,CAACC,WAAW,CAAC;MAG9C;MACAC,MAAM,CAACC,GAAG,IAAK,CAAC,GAAGA,GAAG,EAAE,GAAGZ,QAAQ,CAAE,CAAC;IACxC;IACAN,OAAO,CAAC,CAAC;EAEX,CAAC,EAAE,EAAE,CAAC;EACR,SAASmB,eAAeA,CAACC,KAAK,EAAEC,WAAW,EAAE;IAEzC,IAAIC,GAAG,GAAG,EAAE;IACZ,KAAK,IAAIf,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIa,KAAK,EAAEb,CAAC,EAAE,EAAE;MAC/Be,GAAG,CAACR,IAAI,CAACP,CAAC,CAAC;IACb;IAEA,IAAIgB,MAAM,GAAG,EAAE;IAEf,KAAK,IAAIhB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIc,WAAW,EAAEd,CAAC,EAAE,EAAE;MACrC,MAAMiB,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACD,MAAM,CAAC,CAAC,IAAIJ,KAAK,GAAGb,CAAC,CAAC,CAAC;MACtDgB,MAAM,CAACT,IAAI,CAACQ,GAAG,CAACE,MAAM,CAAC,CAAC;MACxBF,GAAG,CAACE,MAAM,CAAC,GAAGF,GAAG,CAACF,KAAK,GAAGb,CAAC,CAAC;IAC9B;IAEA,OAAOgB,MAAM;EACjB;EACA,SAASI,mBAAmBA,CAACC,UAAU,EAAE;IACrC,MAAMC,KAAK,GAAGV,eAAe,CAACW,KAAK,CAACrB,MAAM,EAAEmB,UAAU,CAAC;IAEvD,KAAK,IAAIrB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqB,UAAU,EAAErB,CAAC,EAAE,EAAE;MACjCT,QAAQ,CAACgB,IAAI,eAACnB,OAAA;QAAKoC,GAAG,EAAED,KAAK,CAACD,KAAK,CAACtB,CAAC,CAAC,GAAC,CAAC;MAAE;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,CAAC;IAEtD;EACJ;EACAR,mBAAmB,CAAC,CAAC,CAAC;EAEtB,oBACIhC,OAAA;IAAAyC,QAAA,EAMKtC;EAAQ;IAAAkC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAER,CAAC;AAEd;AAACtC,EAAA,CA5DQD,WAAW;AAAAyC,EAAA,GAAXzC,WAAW;AA6DpB,eAAeA,WAAW;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}