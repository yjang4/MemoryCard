{"ast":null,"code":"var _jsxFileName = \"/home/daniel/repos/Projects/MemoryCard/src/components/CardDisplay.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardDisplay(props) {\n  const {\n    cards\n  } = props;\n  const displays = [];\n  const prevNumbers = [];\n  function randomUniqueNum(range, outputCount) {\n    let arr = [];\n    for (let i = 1; i <= range; i++) {\n      arr.push(i);\n    }\n    let result = [];\n    for (let i = 1; i <= outputCount; i++) {\n      const random = Math.floor(Math.random() * (range - i));\n      result.push(arr[random]);\n      arr[random] = arr[range - i];\n    }\n    return result;\n  }\n  function displayPokemonCards(numOfCards) {\n    const rando = randomUniqueNum(cards.length, numOfCards);\n    for (let i = 0; i < numOfCards; i++) {\n      displays.push( /*#__PURE__*/_jsxDEV(\"img\", {\n        src: cards[rando[i]]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 27\n      }, this));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: displays\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_c = CardDisplay;\nexport default CardDisplay;\nvar _c;\n$RefreshReg$(_c, \"CardDisplay\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","CardDisplay","props","cards","displays","prevNumbers","randomUniqueNum","range","outputCount","arr","i","push","result","random","Math","floor","displayPokemonCards","numOfCards","rando","length","src","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["/home/daniel/repos/Projects/MemoryCard/src/components/CardDisplay.js"],"sourcesContent":["import React from \"react\";\n\nfunction CardDisplay(props) {\n    const { cards } = props;\n    \n    const displays = [];\n    const prevNumbers = [];\n    function randomUniqueNum(range, outputCount) {\n\n        let arr = []\n        for (let i = 1; i <= range; i++) {\n          arr.push(i)\n        }\n      \n        let result = [];\n      \n        for (let i = 1; i <= outputCount; i++) {\n          const random = Math.floor(Math.random() * (range - i));\n          result.push(arr[random]);\n          arr[random] = arr[range - i];\n        }\n      \n        return result;\n    }\n    function displayPokemonCards(numOfCards) {\n        const rando = randomUniqueNum(cards.length, numOfCards);\n\n        for (let i = 0; i < numOfCards; i++) {\n            displays.push(<img src={cards[rando[i]]}></img>);\n\n        }\n    }\n    \n\n    return (\n        <div>\n            {/* {cards.map((card) => {\n                return <div>\n                    <img src={card}></img>\n                    </div>;\n              })} */}\n            {displays}\n\n        </div>\n      );\n}\nexport default CardDisplay;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,WAAWA,CAACC,KAAK,EAAE;EACxB,MAAM;IAAEC;EAAM,CAAC,GAAGD,KAAK;EAEvB,MAAME,QAAQ,GAAG,EAAE;EACnB,MAAMC,WAAW,GAAG,EAAE;EACtB,SAASC,eAAeA,CAACC,KAAK,EAAEC,WAAW,EAAE;IAEzC,IAAIC,GAAG,GAAG,EAAE;IACZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIH,KAAK,EAAEG,CAAC,EAAE,EAAE;MAC/BD,GAAG,CAACE,IAAI,CAACD,CAAC,CAAC;IACb;IAEA,IAAIE,MAAM,GAAG,EAAE;IAEf,KAAK,IAAIF,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIF,WAAW,EAAEE,CAAC,EAAE,EAAE;MACrC,MAAMG,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACD,MAAM,CAAC,CAAC,IAAIN,KAAK,GAAGG,CAAC,CAAC,CAAC;MACtDE,MAAM,CAACD,IAAI,CAACF,GAAG,CAACI,MAAM,CAAC,CAAC;MACxBJ,GAAG,CAACI,MAAM,CAAC,GAAGJ,GAAG,CAACF,KAAK,GAAGG,CAAC,CAAC;IAC9B;IAEA,OAAOE,MAAM;EACjB;EACA,SAASI,mBAAmBA,CAACC,UAAU,EAAE;IACrC,MAAMC,KAAK,GAAGZ,eAAe,CAACH,KAAK,CAACgB,MAAM,EAAEF,UAAU,CAAC;IAEvD,KAAK,IAAIP,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGO,UAAU,EAAEP,CAAC,EAAE,EAAE;MACjCN,QAAQ,CAACO,IAAI,eAACX,OAAA;QAAKoB,GAAG,EAAEjB,KAAK,CAACe,KAAK,CAACR,CAAC,CAAC;MAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,CAAC;IAEpD;EACJ;EAGA,oBACIxB,OAAA;IAAAyB,QAAA,EAMKrB;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAER,CAAC;AAEd;AAACE,EAAA,GA3CQzB,WAAW;AA4CpB,eAAeA,WAAW;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}