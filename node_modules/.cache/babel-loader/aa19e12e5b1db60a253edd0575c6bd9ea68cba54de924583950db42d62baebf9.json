{"ast":null,"code":"var _jsxFileName = \"/home/daniel/repos/Projects/MemoryCard/src/components/CardDisplay.js\",\n  _s = $RefreshSig$();\nimport { findByDisplayValue } from \"@testing-library/react\";\nimport React, { useState, useEffect } from \"react\";\nimport './CardDisplay.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardDisplay() {\n  _s();\n  const [images, setImg] = useState([]);\n  const [savedCards, setSavedCards] = useState([]);\n  const [level, setLevel] = useState(1);\n  const [score, setScore] = useState(0);\n  const [re, setRe] = useState(0);\n  const displays = [];\n  const difficulty = 1;\n  const startingCards = 2;\n  const imageContainer = document.getElementById(\"image-container\");\n  function randomUniqueNum(range, outputCount) {\n    let arr = [];\n    for (let i = 1; i <= range; i++) {\n      arr.push(i);\n    }\n    let result = [];\n    for (let i = 1; i <= outputCount; i++) {\n      const random = Math.floor(Math.random() * (range - i));\n      result.push(arr[random]);\n      arr[random] = arr[range - i];\n    }\n    return result;\n  }\n  /*   function restartGame() {\n        //setImg([])\n        \n        //setRe(1);\n        //setSavedCards([]);\n    } */\n  function checkIfCardInMemory(id) {\n    if (savedCards.includes(id)) {\n      //emptyDiv(imageContainer);\n      imageContainer.textContent = \"Game Over\";\n\n      /* const tryAgainBtn = document.createElement(\"button\");\n      tryAgainBtn.textContent = \"Try again\";\n      imageContainer.appendChild(tryAgainBtn)\n      tryAgainBtn.addEventListener(\"click\", restartGame); */\n      return true;\n    } else {\n      setScore(score + 1);\n      return false;\n    }\n  }\n  function emptyDiv(targetDiv) {\n    if (targetDiv != null) {\n      while (targetDiv.firstChild) {\n        //targetDiv.removeChild(targetDiv.firstChild);\n      }\n    }\n  }\n  function checkLevelUp() {\n    if (savedCards.length >= level * difficulty + startingCards) {\n      setSavedCards([]);\n      setLevel(level + 1);\n      setImg([]);\n    }\n  }\n  function shuffle(id) {\n    if (!checkIfCardInMemory(id)) {\n      setSavedCards(savedCards => [...savedCards, id]);\n      var container = document.getElementById(\"image-container\");\n      var elementsArray = Array.prototype.slice.call(container.getElementsByClassName('pokemon-image'));\n      elementsArray.forEach(function (element) {\n        container.removeChild(element);\n      });\n      shuffleArray(elementsArray);\n      elementsArray.forEach(function (element) {\n        container.appendChild(element);\n      });\n    }\n  }\n  function shuffleArray(array) {\n    for (var i = array.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n    return array;\n  }\n  /* function displayPokemonCards(numOfCards) {\n      const rando = randomUniqueNum(cards.length, numOfCards);\n       for (let i = 0; i < numOfCards; i++) {\n          displays.push(<img src={cards[rando[i]-1]}></img>);\n       }\n  } */\n  //displayPokemonCards(5);\n  useEffect(() => {\n    async function getData() {\n      const response = await fetch('https://pokeapi.co/api/v2/pokemon?limit=1000', {\n        mode: 'cors'\n      });\n      const pokeData = await response.json();\n      const urlArray = [];\n      const randArray = randomUniqueNum(pokeData.results.length, level * difficulty + startingCards);\n      emptyDiv(imageContainer);\n      for (let i = 0; i < randArray.length; i++) {\n        const newUrl = pokeData.results[randArray[i] - 1].url;\n        const response2 = await fetch(newUrl, {\n          mode: 'cors'\n        });\n        const pokeData2 = await response2.json();\n        urlArray.push(pokeData2.sprites.front_default);\n      }\n      setImg(images => [...images, ...urlArray]);\n    }\n    getData();\n  }, [level]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [checkLevelUp(), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"score-board\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"level\",\n        children: [\"Level: \", level]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"score\",\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"image-container\",\n      children: images.map((image, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          id: index,\n          className: \"pokemon-image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              animation: 'fadeIn 0.5s'\n            },\n            onClick: () => shuffle(index),\n            src: image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n}\n_s(CardDisplay, \"dw5iCqEgrD+PniMuYsT73WxA5ZU=\");\n_c = CardDisplay;\nexport default CardDisplay;\nvar _c;\n$RefreshReg$(_c, \"CardDisplay\");","map":{"version":3,"names":["findByDisplayValue","React","useState","useEffect","jsxDEV","_jsxDEV","CardDisplay","_s","images","setImg","savedCards","setSavedCards","level","setLevel","score","setScore","re","setRe","displays","difficulty","startingCards","imageContainer","document","getElementById","randomUniqueNum","range","outputCount","arr","i","push","result","random","Math","floor","checkIfCardInMemory","id","includes","textContent","emptyDiv","targetDiv","firstChild","checkLevelUp","length","shuffle","container","elementsArray","Array","prototype","slice","call","getElementsByClassName","forEach","element","removeChild","shuffleArray","appendChild","array","j","temp","getData","response","fetch","mode","pokeData","json","urlArray","randArray","results","newUrl","url","response2","pokeData2","sprites","front_default","children","fileName","_jsxFileName","lineNumber","columnNumber","map","image","index","className","style","animation","onClick","src","_c","$RefreshReg$"],"sources":["/home/daniel/repos/Projects/MemoryCard/src/components/CardDisplay.js"],"sourcesContent":["import { findByDisplayValue } from \"@testing-library/react\";\nimport React, { useState, useEffect } from \"react\";\nimport './CardDisplay.css';\n\nfunction CardDisplay() {\n    \n    const [images, setImg] = useState([]);\n    const [savedCards, setSavedCards] = useState([]);\n    const [level, setLevel] = useState(1);\n    const [score, setScore] = useState(0);\n    const [re, setRe] = useState(0);\n    const displays = [];\n    const difficulty = 1;\n    const startingCards = 2;\n    const imageContainer = document.getElementById(\"image-container\");\n\n    function randomUniqueNum(range, outputCount) {\n        let arr = []\n        for (let i = 1; i <= range; i++) {\n          arr.push(i)\n        }\n      \n        let result = [];\n        \n        for (let i = 1; i <= outputCount; i++) {\n          const random = Math.floor(Math.random() * (range - i));\n          result.push(arr[random]);\n          arr[random] = arr[range - i];\n        }\n      \n        return result;\n    }\n  /*   function restartGame() {\n        //setImg([])\n        \n        //setRe(1);\n        //setSavedCards([]);\n    } */\n    function checkIfCardInMemory(id) {\n        if(savedCards.includes(id)) {\n            //emptyDiv(imageContainer);\n            imageContainer.textContent = \"Game Over\";\n\n            /* const tryAgainBtn = document.createElement(\"button\");\n            tryAgainBtn.textContent = \"Try again\";\n            imageContainer.appendChild(tryAgainBtn)\n            tryAgainBtn.addEventListener(\"click\", restartGame); */\n            return true;\n        }\n        else {\n            setScore(score + 1)\n            return false;\n        }\n    }\n    function emptyDiv(targetDiv) {\n        if(targetDiv != null) {\n            while (targetDiv.firstChild) {\n                //targetDiv.removeChild(targetDiv.firstChild);\n            }\n        }\n        \n    }\n    function checkLevelUp() {\n        if(savedCards.length >= level * difficulty + startingCards) {\n            setSavedCards([]);\n            setLevel(level + 1)\n            setImg([])\n        }\n    }\n    function shuffle(id) {\n        if(!checkIfCardInMemory(id)) {\n            setSavedCards(savedCards => ([...savedCards, id]));\n            var container = document.getElementById(\"image-container\");\n            var elementsArray = Array.prototype.slice.call(container.getElementsByClassName('pokemon-image'));\n            elementsArray.forEach(function(element){\n            container.removeChild(element);\n            })\n            shuffleArray(elementsArray);\n            elementsArray.forEach(function(element){\n            container.appendChild(element);\n            })\n        }\n        \n    }\n    function shuffleArray(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Math.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    }\n    /* function displayPokemonCards(numOfCards) {\n        const rando = randomUniqueNum(cards.length, numOfCards);\n\n        for (let i = 0; i < numOfCards; i++) {\n            displays.push(<img src={cards[rando[i]-1]}></img>);\n\n        }\n    } */\n    //displayPokemonCards(5);\n    useEffect(() => {\n        async function getData() {\n          const response = await fetch('https://pokeapi.co/api/v2/pokemon?limit=1000', {mode: 'cors'})\n          const pokeData = await response.json();\n          const urlArray = [];\n          const randArray = randomUniqueNum(pokeData.results.length, level * difficulty + startingCards)\n          emptyDiv(imageContainer)\n          for (let i = 0; i < randArray.length; i ++) {\n            const newUrl = pokeData.results[randArray[i]-1].url;\n            const response2 = await fetch(newUrl, {mode: 'cors'});\n            const pokeData2 = await response2.json();\n            urlArray.push(pokeData2.sprites.front_default);\n          } \n          setImg(images => ([...images, ...urlArray]));\n        }\n        getData()\n        \n      }, [level]);\n    \n    return (\n        <div> \n        {checkLevelUp()}\n            <div id=\"score-board\">\n                <div id=\"level\">\n                    Level: {level}\n                </div>\n                <div id=\"score\">\n                    Score: {score}\n                </div>\n            </div>\n            <div id=\"image-container\">\n                {images.map((image, index) => {\n                    return <div id={index} className =\"pokemon-image\">\n                        <img style={{animation:'fadeIn 0.5s'}} onClick={() => shuffle(index)}  src={image}></img>\n                        </div>;\n                  })}\n            </div>\n\n\n        </div>\n      );\n}\nexport default CardDisplay;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}